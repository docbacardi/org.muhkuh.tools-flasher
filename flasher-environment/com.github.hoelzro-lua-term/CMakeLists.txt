cmake_minimum_required(VERSION 3.2.3)

PROJECT("lua-term")

INCLUDE(ExternalProject)

SET(VERSION_EXTERNAL "0.7")
SET(VERSION_PACKAGE  "5")
SET(PROJECT_VERSION  "${VERSION_EXTERNAL}.${VERSION_PACKAGE}")

#----------------------------------------------------------------------------
#
# Build the project.
#

SET(SUB_CMAKE_ARGS "")
LIST(APPEND SUB_CMAKE_ARGS "-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}")
LIST(APPEND SUB_CMAKE_ARGS "-DCMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")
LIST(APPEND SUB_CMAKE_ARGS "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}")
LIST(APPEND SUB_CMAKE_ARGS "-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}")
IF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	LIST(APPEND SUB_CMAKE_ARGS "-DCMAKE_RC_COMPILER=${CMAKE_RC_COMPILER}")
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
LIST(APPEND SUB_CMAKE_ARGS "-DLUA_LIBRARIES=${LUA54_LIBRARY}")
LIST(APPEND SUB_CMAKE_ARGS "-DLUA_INCLUDE_DIR=${LUA54_INCLUDE_DIR}")
LIST(APPEND SUB_CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}")

MESSAGE("**** LUA_INCLUDE_DIR=${LUA54_INCLUDE_DIR}")
ExternalProject_Add(TARGET_lua-term
                    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/lua-term-${VERSION_EXTERNAL}
                    URL ${CMAKE_CURRENT_SOURCE_DIR}/lua-term-0.07.tar.gz
                    URL_HASH SHA1=c0e8fc9054e784fb10af9dca015f713442402833
                    DEPENDS TARGET_lua54
                    PATCH_COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/copy-over ${CMAKE_CURRENT_BINARY_DIR}/lua-term-${VERSION_EXTERNAL}/src/TARGET_lua-term
                    CMAKE_ARGS ${SUB_CMAKE_ARGS}
                    TEST_COMMAND make test
                    INSTALL_COMMAND make install
)
